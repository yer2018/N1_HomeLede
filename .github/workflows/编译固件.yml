#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: 编译固件

on:
  repository_dispatch:
  workflow_dispatch:

  schedule:
    - cron: 0 12 * * 0

env:
  REPO_URL: https://github.com/xiaoqingfengATGH/HomeLede.git
  REPO_BRANCH: master
  CONFIG_FILE: config
  DIY_SH: customize.sh
  TZ: Asia/Shanghai
  UPLOAD_COWTRANSFER: false

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 检查
      uses: actions/checkout@main
    
    - name: 检查服务器配置
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        cpu=$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c | awk '{print $5}')
        echo "CPU型号为 $cpu"
        if [ $cpu == "8272CL" ];then
        echo "CPU型号为 $cpu 退出"
        exit
        fi

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install libevent-dev build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq full-upgrade
        sudo -E apt-get -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        # 清理多余文件，腾出磁盘空间
        docker rmi `docker images -q`
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo rm -rf /etc/mysql /etc/php /swapfile

    - name: 克隆源码
      run: |
        git clone $REPO_URL openwrt
        echo $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE/files/etc/AdGuardHome/
        chmod u+x startAdGuardHome.sh
        chmod u+x update.sh
        cd $GITHUB_WORKSPACE/files/usr/bin/
        chmod u+x chinadns-ng-update-list.sh
        cd $GITHUB_WORKSPACE/openwrt && ls
        exit

    - name: 安装更新 feeds
      run: |
        #DIY
        cd openwrt
        sed -i '/infinityfreedom/s/^\(.*\)$/#\1/' feeds.conf.default
        #sed -i '/homeclash/s/^\(.*\)$/#\1/' feeds.conf.default
        #sed -i 's/xiaoqingfengATGH\/homeclash.git/yer2018\/homeclash.git/g' feeds.conf.default
        sed -i '/strongswanInDocker/s/^\(.*\)$/#\1/' feeds.conf.default
        echo "src-git amlogic https://github.com/ophub/luci-app-amlogic.git" >> feeds.conf.default
        ./prepareCompile.sh
        
    - name: 加载自定义脚本
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;


    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        cd openwrt
        ./transfer cow --block 2621440 -s -p 64 --no-progress $clash 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: 检查磁盘空间
      if: (!cancelled())
      run: |
        df -Th

    - name: 打包内核
      uses: unifreq/openwrt_packit@master
      env:
        WHOAMI: Ye
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
       # KERNEL_AUTO_LATEST: false
        KERNEL_REPO_URL: https://github.com/ophub/kernel/tree/main/pub/stable
        KERNEL_VERSION_NAME: 6.0.7

    - name: 发布固件
      uses: ncipollo/release-action@v1
      with:
        tag: openwrt_armvirt_v8_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ### **适用于N1盒子的OpenWrt固件**
          * **固件信息：**
          默认IP: 10.10.10.100
          默认用户名: root
          默认密码: password

    - name: 清理Actions空间
      uses: Mattraks/delete-workflow-runs@main
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          keep_minimum_runs: 0
          retain_days: 7
          #retain_days: ${{ github.event.inputs.action_days }}
    
    - name: 删除多余releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        repo: ${{ github.repository }}
        keep_latest: 5
        #keep_latest: ${{ github.event.inputs.rele }}
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
